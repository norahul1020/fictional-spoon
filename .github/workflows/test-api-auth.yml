name: üîë API Auth Test Only

on:
  workflow_dispatch:

env:
  TENABLE_ACCESS_KEY: ${{ secrets.TENABLE_ACCESS_KEY }}
  TENABLE_SECRET_KEY: ${{ secrets.TENABLE_SECRET_KEY }}
  GOREST_API_TOKEN: ${{ secrets.GOREST_API_TOKEN || 'demo-token' }}

jobs:
  api-auth-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: üß™ Test GoRest API Endpoint
      run: |
        echo "üîç Testing GoRest API endpoint..."
        response=$(curl -s https://gorest.co.in/public/v2/users)
        if echo "$response" | jq length > /dev/null; then
          echo "‚úÖ GoRest API endpoint working"
        else
          echo "‚ùå GoRest API endpoint failed"
        fi
    
    - name: üîç Run API Auth Scan
      run: |
        echo "üöÄ Running API Authentication scan using config/api-key.conf..."
        
        # Use the API key configuration file and replace token placeholder
        cp config/api-key.conf tenable_was.conf
        sed -i "s/\${GOREST_API_TOKEN}/${{ env.GOREST_API_TOKEN }}/g" tenable_was.conf
        
        echo "üìã Configuration file content:"
        cat tenable_was.conf
        
        # Run the scan
        docker run \
          --name tenable-api-auth \
          -v $(pwd):/scanner \
          -e WAS_MODE=cicd \
          -e ACCESS_KEY="${{ env.TENABLE_ACCESS_KEY }}" \
          -e SECRET_KEY="${{ env.TENABLE_SECRET_KEY }}" \
          -e GOREST_API_TOKEN="${{ env.GOREST_API_TOKEN }}" \
          tenable/was-scanner:latest || true
        
        # Show results
        if [[ -f "scanner.log" ]]; then
          echo "üìã Scanner log (last 30 lines):"
          tail -30 scanner.log
        fi
          
    - name: ÔøΩÔøΩ Upload Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: api-auth-simple-results-${{ github.run_number }}
        path: |
          tenable_was_scan.html
          scanner.log
          tenable_was.conf
